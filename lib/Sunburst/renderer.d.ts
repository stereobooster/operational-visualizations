import { D3Selection, EventBus, State, StateWriter } from "./typings";
import "d3-transition";
declare class Renderer {
    private angleScale;
    private arc;
    private currentTranslation;
    private data;
    private dataHandler;
    private el;
    private events;
    private mouseOverDatum?;
    private previous;
    private radiusScale;
    private radius;
    private state;
    private stateWriter;
    private total;
    private zoomNode;
    constructor(state: State, stateWriter: StateWriter, events: EventBus, el: D3Selection);
    draw(): void;
    private exit;
    private updateZoom;
    private isFirstLevelChild;
    private arcClass;
    private enterAndUpdate;
    private compute;
    private startAngle;
    private endAngle;
    private innerRadius;
    private outerRadius;
    private translate;
    private translateBack;
    private isEqual;
    private isSibling;
    private findSiblings;
    private findAncestor;
    private findDatum;
    private arcTween;
    private removeArcTween;
    private onClick;
    private zoomOut;
    private onMouseOver;
    private getFocusPoint;
    private highlightPath;
    private onMouseLeave;
    private removeTruncationArrows;
    private arrowTransformation;
    private updateTruncationArrows;
}
export default Renderer;
//# sourceMappingURL=renderer.d.ts.map